import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { Directive, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class GrlFileInputButton {
    constructor() {
        this.grlFileInputAction = 'open';
        this._disabled = false;
    }
    get disabled() {
        return this._disabled || (this.grlFileInput && this.grlFileInput.disabled);
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
    }
    _click() {
        if (this.disabled) {
            return;
        }
        if (this.grlFileInputAction === 'open') {
            this.grlFileInput.open();
        }
        else if (this.grlFileInputAction === 'clear') {
            this.grlFileInput.clear();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.8", ngImport: i0, type: GrlFileInputButton, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.0.8", type: GrlFileInputButton, isStandalone: true, selector: "button[grlFileInputButtonFor]", inputs: { grlFileInput: ["grlFileInputButtonFor", "grlFileInput"], grlFileInputAction: "grlFileInputAction", disabled: "disabled" }, host: { listeners: { "click": "_click()" }, properties: { "attr.disabled": "disabled || null" } }, exportAs: ["grlFileInputButton", "grlFileInputButtonFor"], ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.8", ngImport: i0, type: GrlFileInputButton, decorators: [{
            type: Directive,
            args: [{
                    selector: 'button[grlFileInputButtonFor]',
                    exportAs: 'grlFileInputButton, grlFileInputButtonFor',
                    host: {
                        '(click)': '_click()',
                        '[attr.disabled]': 'disabled || null',
                    },
                    standalone: true,
                }]
        }], propDecorators: { grlFileInput: [{
                type: Input,
                args: ['grlFileInputButtonFor']
            }], grlFileInputAction: [{
                type: Input
            }], disabled: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1pbnB1dC1idXR0b24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1nb3JpbGxhL2ZpbGUtaW5wdXQvZmlsZS1pbnB1dC1idXR0b24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFnQixxQkFBcUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzVFLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQVlqRCxNQUFNLE9BQU8sa0JBQWtCO0lBVC9CO1FBYVcsdUJBQWtCLEdBQXFCLE1BQU0sQ0FBQztRQVMvQyxjQUFTLEdBQUcsS0FBSyxDQUFDO0tBWTNCO0lBbkJDLElBQ0ksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBQ0QsSUFBSSxRQUFRLENBQUMsS0FBbUI7UUFDOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBR0QsTUFBTTtRQUNKLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixPQUFPO1NBQ1I7UUFDRCxJQUFJLElBQUksQ0FBQyxrQkFBa0IsS0FBSyxNQUFNLEVBQUU7WUFDdEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUMxQjthQUFNLElBQUksSUFBSSxDQUFDLGtCQUFrQixLQUFLLE9BQU8sRUFBRTtZQUM5QyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO1NBQzNCO0lBQ0gsQ0FBQzs4R0F4QlUsa0JBQWtCO2tHQUFsQixrQkFBa0I7OzJGQUFsQixrQkFBa0I7a0JBVDlCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLCtCQUErQjtvQkFDekMsUUFBUSxFQUFFLDJDQUEyQztvQkFDckQsSUFBSSxFQUFFO3dCQUNKLFNBQVMsRUFBRSxVQUFVO3dCQUNyQixpQkFBaUIsRUFBRSxrQkFBa0I7cUJBQ3RDO29CQUNELFVBQVUsRUFBRSxJQUFJO2lCQUNqQjs4QkFHaUMsWUFBWTtzQkFBM0MsS0FBSzt1QkFBQyx1QkFBdUI7Z0JBRXJCLGtCQUFrQjtzQkFBMUIsS0FBSztnQkFHRixRQUFRO3NCQURYLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb29sZWFuSW5wdXQsIGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XHJcbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgR3JsRmlsZUlucHV0IH0gZnJvbSAnLi9maWxlLWlucHV0JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnYnV0dG9uW2dybEZpbGVJbnB1dEJ1dHRvbkZvcl0nLFxyXG4gIGV4cG9ydEFzOiAnZ3JsRmlsZUlucHV0QnV0dG9uLCBncmxGaWxlSW5wdXRCdXR0b25Gb3InLFxyXG4gIGhvc3Q6IHtcclxuICAgICcoY2xpY2spJzogJ19jbGljaygpJyxcclxuICAgICdbYXR0ci5kaXNhYmxlZF0nOiAnZGlzYWJsZWQgfHwgbnVsbCcsXHJcbiAgfSxcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgR3JsRmlsZUlucHV0QnV0dG9uIHtcclxuXHJcbiAgQElucHV0KCdncmxGaWxlSW5wdXRCdXR0b25Gb3InKSBncmxGaWxlSW5wdXQ6IEdybEZpbGVJbnB1dDtcclxuXHJcbiAgQElucHV0KCkgZ3JsRmlsZUlucHV0QWN0aW9uOiAnY2xlYXInIHwgJ29wZW4nID0gJ29wZW4nO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZCB8fCAodGhpcy5ncmxGaWxlSW5wdXQgJiYgdGhpcy5ncmxGaWxlSW5wdXQuZGlzYWJsZWQpO1xyXG4gIH1cclxuICBzZXQgZGlzYWJsZWQodmFsdWU6IEJvb2xlYW5JbnB1dCkge1xyXG4gICAgdGhpcy5fZGlzYWJsZWQgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xyXG4gIH1cclxuICBwcml2YXRlIF9kaXNhYmxlZCA9IGZhbHNlO1xyXG5cclxuICBfY2xpY2soKSB7XHJcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5ncmxGaWxlSW5wdXRBY3Rpb24gPT09ICdvcGVuJykge1xyXG4gICAgICB0aGlzLmdybEZpbGVJbnB1dC5vcGVuKCk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMuZ3JsRmlsZUlucHV0QWN0aW9uID09PSAnY2xlYXInKSB7XHJcbiAgICAgIHRoaXMuZ3JsRmlsZUlucHV0LmNsZWFyKCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==