{"version":3,"file":"ng-gorilla-file-input.mjs","sources":["../../../projects/ng-gorilla/file-input/byte-format.pipe.ts","../../../projects/ng-gorilla/file-input/file-input-button.ts","../../../projects/ng-gorilla/file-input/validator.ts","../../../projects/ng-gorilla/file-input/file-input.ts","../../../projects/ng-gorilla/file-input/public-api.ts","../../../projects/ng-gorilla/file-input/ng-gorilla-file-input.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'byteFormat',\r\n  standalone: true\r\n})\r\nexport class ByteFormatPipe implements PipeTransform {\r\n\r\n  transform(value: number, decimals?: number): unknown {\r\n    if (value > 0) {\r\n      return this.formatBytes(value, decimals);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private formatBytes(bytes: number, decimals?: number) {\r\n    if (bytes === 0) {\r\n      return '0 Byte';\r\n    }\r\n    const k = 1024;\r\n    const dm = decimals || 2;\r\n    const sizes = ['Byte', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n\r\n}","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Directive, Input } from '@angular/core';\r\nimport { GrlFileInput } from './file-input';\r\n\r\n@Directive({\r\n  selector: 'button[grlFileInputButtonFor]',\r\n  exportAs: 'grlFileInputButton, grlFileInputButtonFor',\r\n  host: {\r\n    '(click)': '_click()',\r\n    '[attr.disabled]': 'disabled || null',\r\n  },\r\n  standalone: true,\r\n})\r\nexport class GrlFileInputButton {\r\n\r\n  @Input('grlFileInputButtonFor') grlFileInput: GrlFileInput;\r\n\r\n  @Input() grlFileInputAction: 'clear' | 'open' = 'open';\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled || (this.grlFileInput && this.grlFileInput.disabled);\r\n  }\r\n  set disabled(value: BooleanInput) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  private _disabled = false;\r\n\r\n  _click() {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    if (this.grlFileInputAction === 'open') {\r\n      this.grlFileInput.open();\r\n    } else if (this.grlFileInputAction === 'clear') {\r\n      this.grlFileInput.clear();\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, OnChanges, SimpleChanges, forwardRef } from '@angular/core';\r\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\r\nimport { FileInput } from './file-input';\r\n\r\nexport class FileValidator {\r\n    static maxContentSize(bytes: number): ValidatorFn {\r\n        return maxContentSizeValidator(bytes);\r\n    }\r\n}\r\n\r\nconst MAX_CONTENT_SIZE_VALIDATOR: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => MaxContentSizeValidator),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[maxContentSize][formControlName],[maxContentSize][formControl],[maxContentSize][ngModel]',\r\n    providers: [MAX_CONTENT_SIZE_VALIDATOR],\r\n    host: { '[attr.maxContentSize]': '_enabled ? maxContentSize : null' },\r\n    standalone: true\r\n})\r\nexport class MaxContentSizeValidator implements Validator, OnChanges {\r\n\r\n    private _validator: ValidatorFn = nullValidator;\r\n    private _onChange!: () => void;\r\n\r\n    /**\r\n     * A flag that tracks whether this validator is enabled.\r\n     *\r\n     * Marking it `internal` (vs `protected`), so that this flag can be used in host bindings of\r\n     * directive classes that extend this base class.\r\n     * @internal\r\n     */\r\n    _enabled?: boolean;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.inputName in changes) {\r\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\r\n            this._enabled = this.enabled(input);\r\n            this._validator = this._enabled ? this.createValidator(input) : nullValidator;\r\n            if (this._onChange) {\r\n                this._onChange();\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(control: AbstractControl): ValidationErrors | null {\r\n        return this._validator(control);\r\n    }\r\n\r\n    registerOnValidatorChange(fn: () => void): void {\r\n        this._onChange = fn;\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Determines whether this validator should be active or not based on an input.\r\n     * Base class implementation checks whether an input is defined (if the value is different from\r\n     * `null` and `undefined`). Validator classes that extend this base class can override this\r\n     * function with the logic specific to a particular validator directive.\r\n     */\r\n    enabled(input: unknown): boolean {\r\n        return input != null /* both `null` and `undefined` */;\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * Tracks changes to the maximum content size bound to this directive.\r\n     */\r\n    @Input() maxContentSize!: string | number | null;\r\n\r\n    inputName = 'maxContentSize';\r\n\r\n    normalizeInput = (input: string | number): number => toInteger(input);\r\n\r\n    createValidator = (maxContentSize: number): ValidatorFn => maxContentSizeValidator(maxContentSize);\r\n}\r\n\r\n/**\r\n * Method that updates string to integer if not already a number\r\n *\r\n * @param value The value to convert to integer.\r\n * @returns value of parameter converted to number or integer.\r\n */\r\nfunction toInteger(value: string | number): number {\r\n    return typeof value === 'number' ? value : parseInt(value, 10);\r\n}\r\n\r\n/**\r\n* Validator that requires the content size of the control's value to be greater than\r\n* to the provided maximum content size. See `FileValidator.maxContentSize` for additional information.\r\n*/\r\nfunction maxContentSizeValidator(bytes: number): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: any; } | null => {\r\n        const size = control && control.value ? (control.value as FileInput[]).map(f => f.file.size).reduce((acc, i) => acc + i, 0) : 0;\r\n        const condition = bytes > size;\r\n        return condition ? null : { maxContentSize: { actualSize: size, maxSize: bytes } };\r\n    };\r\n}\r\n\r\n/**\r\n * Function that has `ValidatorFn` shape, but performs no operation.\r\n */\r\nfunction nullValidator(control: AbstractControl): ValidationErrors | null {\r\n    return null;\r\n}","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, ElementRef, HostBinding, Input, NgModule, OnChanges, OnDestroy, Optional, Self, SimpleChanges, ViewChild, ViewEncapsulation, numberAttribute } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormGroupDirective, NgControl, NgForm, Validators } from '@angular/forms';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { CanDisable, ErrorStateMatcher, HasTabIndex, mixinDisabled, mixinErrorState, mixinTabIndex } from '@angular/material/core';\r\nimport { MatFormFieldControl } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { Subject } from 'rxjs';\r\nimport { ByteFormatPipe } from './byte-format.pipe';\r\nimport { GrlFileInputButton } from './file-input-button';\r\nimport { MaxContentSizeValidator } from './validator';\r\n\r\nexport class FileInput {\r\n  name: string;\r\n\r\n  constructor(public file: File) {\r\n    this.name = file.name;\r\n  }\r\n}\r\n\r\nlet nextUniqueId = 0;\r\n\r\n// Boilerplate for applying mixins to GrlFileInput.\r\n/** @docs-private */\r\nconst MixinErrorStateBase =\r\n  mixinTabIndex(\r\n    mixinDisabled(\r\n      mixinErrorState(\r\n        class {\r\n          /**\r\n           * Emits whenever the component state changes and should cause the parent\r\n           * form-field to update. Implemented as part of `MatFormFieldControl`.\r\n           * @docs-private\r\n           */\r\n          readonly stateChanges = new Subject<void>();\r\n\r\n          constructor(\r\n            public _elementRef: ElementRef,\r\n            public _defaultErrorStateMatcher: ErrorStateMatcher,\r\n            public _parentForm: NgForm,\r\n            public _parentFormGroup: FormGroupDirective,\r\n            /**\r\n             * Form control bound to the component.\r\n             * Implemented as part of `MatFormFieldControl`.\r\n             * @docs-private\r\n             */\r\n            public ngControl: NgControl\r\n          ) { }\r\n        }\r\n      )\r\n    )\r\n  );\r\n\r\n@Component({\r\n  selector: 'grl-file-input',\r\n  template: `\r\n    <mat-chip-set>\r\n      <mat-chip *ngFor=\"let file of value\" (removed)=\"remove(file)\">\r\n          {{file.name}}\r\n          <button matChipRemove>\r\n              <mat-icon>cancel</mat-icon>\r\n          </button>\r\n      </mat-chip>\r\n    </mat-chip-set>\r\n    <div class=\"mat-mdc-file-input-value\">\r\n        <span class=\"mat-mdc-file-input-placeholder mat-mdc-file-input-min-line\" *ngIf=\"empty\">{{placeholder}}</span>\r\n    </div>\r\n    <input type=\"file\" #fileInput [attr.multiple]=\"multiple\" [attr.accept]=\"accept\" (change)=\"onUpload($event)\" />\r\n  `,\r\n  styles: [`\r\n    grl-file-input{\r\n      --grl-file-input-placeholder-text-color: rgba(0, 0, 0, 0.6);\r\n      display: block;\r\n      min-height: 40px;\r\n      outline: none;\r\n      user-select: none;\r\n\r\n      input[type=\"file\"] {\r\n          position: absolute;\r\n          inset: 0;\r\n          z-index: -10;\r\n          width: 0;\r\n          height: 0;\r\n          opacity: 0;\r\n          display: none;\r\n      }\r\n    }\r\n    .mat-mdc-file-input-value {\r\n        width: 100%;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap\r\n    }\r\n    .mat-mdc-file-input-min-line:empty::before {\r\n        content: ' ';\r\n        white-space: pre;\r\n        width: 1px;\r\n        display: inline-block;\r\n        visibility: hidden;\r\n    }\r\n    .mat-mdc-file-input-placeholder {\r\n        transition: color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);\r\n        color: var(--grl-file-input-placeholder-text-color)\r\n    }\r\n    ._mat-animation-noopable .mat-mdc-file-input-placeholder {\r\n        transition: none\r\n    }\r\n    .mat-form-field-hide-placeholder .mat-mdc-file-input-placeholder {\r\n        color: rgba(0, 0, 0, 0);\r\n        -webkit-text-fill-color: rgba(0, 0, 0, 0);\r\n        transition: none;\r\n        display: block\r\n    }\r\n  `],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [\r\n    { provide: MatFormFieldControl, useExisting: GrlFileInput }\r\n  ],\r\n  inputs: ['disabled', 'tabIndex'],\r\n  host: {\r\n    '[class.inline-upliader-disabled]': 'disabled',\r\n    '[class.inline-upliader-invalid]': 'errorState',\r\n    '[class.inline-upliader-required]': 'required',\r\n    '[class.inline-upliader-empty]': 'empty',\r\n    '[class.inline-upliader-multiple]': 'multiple',\r\n    '[attr.role]': 'role',\r\n    '(focus)': '_focus()',\r\n    '(blur)': '_blur()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-required]': 'required.toString()',\r\n    '[attr.aria-invalid]': 'errorState',\r\n    '[attr.tabindex]': 'tabIndex',\r\n    '[attr.id]': 'id'\r\n  },\r\n})\r\nexport class GrlFileInput extends MixinErrorStateBase implements MatFormFieldControl<any>, ControlValueAccessor, OnDestroy, CanDisable, HasTabIndex, OnChanges, DoCheck {\r\n\r\n  @ViewChild('fileInput') input: ElementRef<HTMLInputElement>;\r\n\r\n  @Input() multiple: true | null = null;\r\n\r\n  @Input() accept: string[] = ['image/*'];\r\n\r\n  @Input({ transform: numberAttribute }) maxContentSize: number;\r\n\r\n  @Input() value: FileInput[] = [];\r\n\r\n  @Input() override errorStateMatcher: ErrorStateMatcher;\r\n\r\n  remove(file: FileInput) {\r\n    if (!this.disabled) {\r\n      const index = this.value.indexOf(file);\r\n      if (index >= 0) {\r\n        this.value.splice(index, 1);\r\n        this.input.nativeElement.value = '';\r\n        this._onChange(this.value);\r\n        this.stateChanges.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  onUpload(event: Event) {\r\n    const fileList = (event.target as HTMLInputElement).files;\r\n    if (!this.disabled && fileList) {\r\n      this.value = [];\r\n      for (let i = 0; i < fileList.length; i++) {\r\n        if (typeof fileList[i].name != 'undefined' && (!this.maxContentSize || fileList[i].size < this.maxContentSize) && (this.accept.includes('image/*') || this.accept.includes(fileList[i].type) && !(this.value.map(x => x.name).includes(fileList[i].name)))) {\r\n          this.value.push(new FileInput(fileList[i]));\r\n        }\r\n      }\r\n      this._onChange(this.value);\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  open() {\r\n    this.input.nativeElement.click();\r\n  }\r\n\r\n  clear() {\r\n    this.value = [];\r\n    this.input.nativeElement.value = '';\r\n    this._onChange(this.value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes['disabled'] || changes['userAriaDescribedBy']) {\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  _previousControl: AbstractControl | null | undefined;\r\n\r\n  ngDoCheck() {\r\n    const ngControl = this.ngControl;\r\n    if (ngControl) {\r\n      if (this._previousControl !== ngControl.control) {\r\n        if (this._previousControl !== undefined && ngControl.disabled !== null && ngControl.disabled !== this.disabled) {\r\n          this.disabled = ngControl.disabled;\r\n        }\r\n        this._previousControl = ngControl.control;\r\n      }\r\n      this.updateErrorState();\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n  set id(value: string) {\r\n    this._id = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _id = `inline-uploader-${nextUniqueId++}`;\r\n\r\n  @Input() placeholder: string;\r\n\r\n  private _focused = false;\r\n  get focused(): boolean {\r\n    return this._focused;\r\n  }\r\n  set focused(v: boolean) {\r\n    this._focused = v;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get empty(): boolean {\r\n    return this.value.length ? false : true;\r\n  }\r\n\r\n  get shouldLabelFloat(): boolean {\r\n    return this.focused || !this.empty;\r\n  }\r\n\r\n  get required(): boolean {\r\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\r\n  }\r\n  set required(value: BooleanInput) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required: boolean | undefined;\r\n\r\n  controlType = 'mat-select';\r\n\r\n  private _autofilled = false;\r\n  public get autofilled(): boolean {\r\n    return this._autofilled;\r\n  }\r\n  public set autofilled(v: boolean) {\r\n    this._autofilled = v;\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @Input('aria-describedby') userAriaDescribedBy: string;\r\n\r\n  @HostBinding('attr.aria-describedby') _ariaDescribedby: string | null = null;\r\n\r\n  setDescribedByIds(ids: string[]): void {\r\n    this._ariaDescribedby = ids.length ? ids.join(' ') : null;\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if (!this.disabled) {\r\n      this._elementRef.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  _focus() {\r\n    if (!this.disabled) {\r\n      this.focused = true;\r\n    }\r\n  }\r\n\r\n  _blur() {\r\n    this.focused = false;\r\n    this._onTouched();\r\n  }\r\n\r\n  private _role: string | null = null;\r\n  @Input()\r\n  get role(): string | null {\r\n    if (this._role) {\r\n      return this._role;\r\n    }\r\n\r\n    return this.empty ? null : this._defaultRole;\r\n  }\r\n  set role(value: string | null) {\r\n    this._role = value;\r\n  }\r\n\r\n  protected _defaultRole = 'presentation';\r\n\r\n  constructor(\r\n    _elementRef: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    defaultErrorStateMatcher: ErrorStateMatcher,\r\n    @Optional() parentForm: NgForm,\r\n    @Optional() parentFormGroup: FormGroupDirective,\r\n    @Optional() @Self() ngControl: NgControl,\r\n  ) {\r\n    super(_elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\r\n\r\n    if (this.ngControl != null) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function when touched. Set as part of ControlValueAccessor implementation.\r\n   * @docs-private\r\n  */\r\n  _onTouched = () => { };\r\n\r\n  /**\r\n   * Function when changed. Set as part of ControlValueAccessor implementation.\r\n   * @docs-private\r\n  */\r\n  _onChange: (value: FileInput[]) => void = () => { };\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n  */\r\n  writeValue(value: FileInput[]): void {\r\n    if (value) {\r\n      this.value = value;\r\n      this._changeDetectorRef.markForCheck();\r\n      this.stateChanges.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n  */\r\n  registerOnChange(fn: (value: FileInput[]) => void): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n  */\r\n  registerOnTouched(fn: () => void): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   * @docs-private\r\n  */\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this._changeDetectorRef.markForCheck();\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [GrlFileInput, GrlFileInputButton, MaxContentSizeValidator, ByteFormatPipe],\r\n  exports: [GrlFileInput, GrlFileInputButton, MaxContentSizeValidator, ByteFormatPipe],\r\n})\r\nexport class GrlFileInputModule { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/shayan-ghzl/ng-gorilla?tab=MIT-1-ov-file#readme\r\n */\r\n\r\nexport * from './byte-format.pipe';\r\nexport * from './file-input';\r\nexport * from './file-input-button';\r\nexport * from './validator';\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}